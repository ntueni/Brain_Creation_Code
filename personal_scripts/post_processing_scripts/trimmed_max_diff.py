# import csv
import pandas as pd


### takes atrophy differences csv file generated by results_summary
### returs maximum value of trimmed max for all quantities --> useful for vsualization 

## Specify the path to your uploaded file
path = "path_to_post_processing_files"
fileout_name= "OAS1_0002_MR1_atrophy_differences.csv" 
filein_name ="OAS1_0002_MR1_atrophy_results.csv"
path_out = path + fileout_name
path_in = path + filein_name




# Load the data
df = pd.read_csv(path_in)

# Select only relevant columns for analysis
df = df[['Quantity', 'Region', 'Location', 'Other Notes', 'trimmed_max']]

# Create a function to compute the differences
def compute_trimmed_max_difference(df, quantity, region, atrophy1, atrophy2):
    """
    Compute the difference in trimmed_max between two atrophy conditions.
    
    Parameters:
    - df: DataFrame containing the dataset
    - quantity: string, the type of quantity (displacement, hydrostatic stress, etc.)
    - region: float/int, the region number
    - atrophy1: string, the name of the first atrophy condition
    - atrophy2: string, the name of the second atrophy condition
    
    Returns:
    - difference in trimmed_max between atrophy1 and atrophy2
    """
    # Filter for the desired quantity and region
    df_filtered = df[(df['Quantity'] == quantity) & (df['Region'] == region)]
    
    # Get trimmed_max for atrophy_19R_last_timestep (atrophy1) and other atrophy
    max_atrophy1 = df_filtered[df_filtered['Other Notes'] == atrophy1]['trimmed_max'].values[0]
    max_atrophy2 = df_filtered[df_filtered['Other Notes'] == atrophy2]['trimmed_max'].values[0]
    
    # Compute the difference
    difference = (max_atrophy1 - max_atrophy2)
    return difference

# Example usage for all unique quantities and regions in the dataset
quantities = df['Quantity'].unique()
regions = df['Region'].unique()

results = []

for quantity in quantities:
    for region in regions:
        try:
            # Compute differences for atrophy_19R_last_timestep vs other atrophy conditions
            diff_19R_1R = compute_trimmed_max_difference(df, quantity, region, 'atrophy_19R_last_timestep', 'atrophy_1R_last_timestep')
            diff_19R_2R = compute_trimmed_max_difference(df, quantity, region, 'atrophy_19R_last_timestep', 'atrophy_2R_last_timestep')
            diff_19R_4R = compute_trimmed_max_difference(df, quantity, region, 'atrophy_19R_last_timestep', 'atrophy_4R_last_timestep')
            diff_19R_9R = compute_trimmed_max_difference(df, quantity, region, 'atrophy_19R_last_timestep', 'atrophy_9R_last_timestep')
            
            # Store the results
            results.append({
                'Quantity': quantity,
                'Region': region,
                'Difference_19R_vs_1R': diff_19R_1R,
                'Difference_19R_vs_2R': diff_19R_2R,
                'Difference_19R_vs_4R': diff_19R_4R,
                'Difference_19R_vs_9R': diff_19R_9R
            })
        except IndexError:
            print(f"Missing data for Quantity: {quantity}, Region: {region}")

# Convert results into a DataFrame for easier visualization
results_df = pd.DataFrame(results)

# Compute the maximum difference over all regions for each quantity
max_diff_1R = results_df.groupby('Quantity')['Difference_19R_vs_1R'].max().reset_index()
max_diff_2R = results_df.groupby('Quantity')['Difference_19R_vs_2R'].max().reset_index()
max_diff_4R = results_df.groupby('Quantity')['Difference_19R_vs_4R'].max().reset_index()
max_diff_9R = results_df.groupby('Quantity')['Difference_19R_vs_9R'].max().reset_index()

# Merging all max differences into one DataFrame
max_diffs = max_diff_1R.merge(max_diff_2R, on='Quantity') \
                        .merge(max_diff_4R, on='Quantity') \
                        .merge(max_diff_9R, on='Quantity')

# Display the maximum differences for each quantity
print(max_diffs)

# output_csv_path = path_out
# differences_df.to_csv(output_csv_path, index=False)

# output_csv_path  # Returning the path to the saved file